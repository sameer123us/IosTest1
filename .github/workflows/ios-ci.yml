name: iOS CI/CD Hybrid (GitHub Actions + Bitrise)

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:

  ### ✅ Step 1: Build & Unit Test Locally (GitHub Actions) ###
  build:
    runs-on: macos-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up Xcode
        run: sudo xcode-select --switch /Applications/Xcode.app/Contents/Developer

      - name: Install Dependencies
        run: |
          brew install cocoapods jq
          pod install --project-directory=.

      - name: Build Project
        run: |
          xcodebuild clean build \
            -workspace "Pocket Contacts Pro.xcworkspace" \
            -scheme "Pocket Contacts Pro" \
            -destination 'platform=iOS Simulator,name=iPhone 14,OS=latest' \
            CODE_SIGNING_ALLOWED=NO

  ### ✅ Step 2: Trigger Bitrise Build (For Actual IPA Generation) ###
  bitrise-build:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Bitrise Build
        run: |
          curl -X POST "https://api.bitrise.io/v0.1/apps/${{ secrets.BITRISE_APP_SLUG }}/builds" \
          -H "Authorization: ${{ secrets.BITRISE_API_KEY }}" \
          -H "Content-Type: application/json" \
          --data '{
            "hook_info": { "type": "bitrise" },
            "build_params": { "branch": "main" }
          }'

  ### ✅ Step 3: Download IPA from Bitrise ###
  download-ipa:
    needs: bitrise-build
    runs-on: ubuntu-22.04
    steps:
      - name: Wait for Bitrise Build to Complete
        run: sleep 180  # Adjust based on actual build time

      - name: Fetch Latest Build Artifacts
        run: |
          curl -X GET "https://api.bitrise.io/v0.1/apps/${{ secrets.BITRISE_APP_SLUG }}/builds/latest/artifacts" \
          -H "Authorization: ${{ secrets.BITRISE_API_KEY }}" -o artifacts.json

          IPA_URL=$(jq -r '.data[] | select(.title | endswith(".ipa")) | .expiring_download_url' artifacts.json)
          curl -o "PocketContactsPro.ipa" "$IPA_URL"

      - name: Upload IPA as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: PocketContactsPro
          path: PocketContactsPro.ipa

  ### ✅ Step 4: Deploy to Firebase App Distribution ###
  deploy-firebase:
    needs: download-ipa
    runs-on: ubuntu-latest
    steps:
      - name: Download IPA
        uses: actions/download-artifact@v3
        with:
          name: PocketContactsPro
          path: .

      - name: Deploy to Firebase App Distribution
        run: |
          firebase appdistribution:distribute "PocketContactsPro.ipa" \
          --app ${{ secrets.FIREBASE_APP_ID }} \
          --groups testers \
          --token "${{ secrets.FIREBASE_API_KEY }}"

  ### ✅ Step 5: Deploy to App Store (via Bitrise) ###
  deploy-appstore:
    needs: deploy-firebase
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Bitrise App Store Deployment
        run: |
          curl -X POST "https://api.bitrise.io/v0.1/apps/${{ secrets.BITRISE_APP_SLUG }}/builds" \
          -H "Authorization: ${{ secrets.BITRISE_API_KEY }}" \
          -H "Content-Type: application/json" \
          --data '{
            "hook_info": { "type": "bitrise" },
            "build_params": {
              "workflow_id": "deploy-to-appstore",
              "branch": "main"
            }
          }'
